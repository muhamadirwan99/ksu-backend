version: "3.8"

services:
  # Database Container
  mysql-db:
    image: mysql:8.0
    container_name: ksu-mysql
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      # Data persistence
      - mysql_data:/var/lib/mysql
      # Backup directory mounted to host
      - ./backups:/backups
      # Config for backup optimization
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
    networks:
      - ksu-network

  # Backend Container
  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: ksu-backend
    restart: unless-stopped
    depends_on:
      - mysql-db
    env_file:
      - .env.production
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      # Mount backup directory to host for persistence
      - ./backups:/app/backups
      # Mount logs
      - ./logs:/app/logs
    networks:
      - ksu-network

  # Frontend Container (optional)
  frontend:
    image: nginx:alpine
    container_name: ksu-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/dist:/usr/share/nginx/html
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - ksu-network

volumes:
  mysql_data:
    driver: local

networks:
  ksu-network:
    driver: bridge
