// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ResponseLog {
  id_log     Int      @id @default(autoincrement())
  success    Boolean
  message    String   @db.Text
  data       Json
  created_at DateTime @db.Timestamp(6)

  @@map("response_logs")
}

model User {
  username   String      @id @db.VarChar(100)
  password   String      @db.VarChar(100)
  name       String      @db.VarChar(100)
  token      String?     @db.VarChar(255)
  id_role    String      @db.VarChar(10)
  created_at DateTime    @db.Timestamp(6)
  updated_at DateTime?   @db.Timestamp(6)
  role       Role        @relation(fields: [id_role], references: [id_role])
  Penjualan  Penjualan[]

  @@map("users")
}

model Role {
  id_role                 String    @id @db.VarChar(10)
  role_name               String    @db.VarChar(100)
  sts_anggota             Boolean   @default(false)
  sts_pembayaran_pinjaman Boolean   @default(false)
  sts_kartu_piutang       Boolean   @default(false)
  sts_supplier            Boolean   @default(false)
  sts_divisi              Boolean   @default(false)
  sts_produk              Boolean   @default(false)
  sts_pembelian           Boolean   @default(false)
  sts_penjualan           Boolean   @default(false)
  sts_retur               Boolean   @default(false)
  sts_pembayaran_hutang   Boolean   @default(false)
  sts_estimasi            Boolean   @default(false)
  sts_stocktake_harian    Boolean   @default(false)
  sts_stock_opname        Boolean   @default(false)
  sts_cash_in_cash_out    Boolean   @default(false)
  sts_cash_movement       Boolean   @default(false)
  sts_user                Boolean   @default(false)
  sts_role                Boolean   @default(false)
  sts_cetak_label         Boolean   @default(false)
  sts_cetak_barcode       Boolean   @default(false)
  sts_awal_akhir_hari     Boolean   @default(false)
  sts_dashboard           Boolean   @default(false)
  sts_laporan             Boolean   @default(false)
  created_at              DateTime  @default(now()) @db.Timestamp(6)
  updated_at              DateTime? @db.Timestamp(6)

  users User[]

  @@map("roles")
}

model Anggota {
  id_anggota     String          @id @db.VarChar(8)
  nm_anggota     String          @db.VarChar(100)
  alamat         String          @db.VarChar(255)
  no_wa          String          @db.VarChar(20)
  limit_pinjaman Decimal         @db.Decimal(10, 2)
  hutang         Decimal?        @db.Decimal(10, 2)
  created_at     DateTime        @db.Timestamp(6)
  updated_at     DateTime?       @db.Timestamp(6)
  Penjualan      Penjualan[]
  HutangAnggota  HutangAnggota[]

  @@map("anggota")
}

model Divisi {
  id_divisi  String    @id @db.VarChar(3)
  nm_divisi  String    @db.VarChar(100)
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  products Product[]

  @@map("divisi")
}

model Supplier {
  id_supplier   String    @id @db.VarChar(10)
  nm_supplier   String    @db.VarChar(100)
  nm_pemilik    String    @db.VarChar(100)
  nm_pic        String    @db.VarChar(100)
  no_wa         String    @db.VarChar(20)
  alamat        String    @db.VarChar(255)
  hutang_dagang Decimal?  @db.Decimal(10, 2)
  created_at    DateTime  @db.Timestamp(6)
  updated_at    DateTime? @db.Timestamp(6)

  products     Product[]
  pembelian    Pembelian[]
  HutangDagang HutangDagang[]

  @@map("suppliers")
}

model Product {
  id_product     String    @id @db.VarChar(100)
  nm_product     String    @db.VarChar(100)
  id_divisi      String    @db.VarChar(3)
  id_supplier    String    @db.VarChar(10)
  harga_jual     Decimal   @db.Decimal(10, 2)
  harga_beli     Decimal   @db.Decimal(10, 2)
  status_product Boolean
  jumlah         Int       @db.Int
  keterangan     String?   @db.VarChar(255)
  created_at     DateTime  @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)

  supplier         Supplier          @relation(fields: [id_supplier], references: [id_supplier])
  divisi           Divisi            @relation(fields: [id_divisi], references: [id_divisi])
  detail_pembelian DetailPembelian[]
  DetailPenjualan  DetailPenjualan[]

  @@map("products")
}

model CashInOut {
  id_cash_in_out String    @id @db.VarChar(3)
  tg_transaksi   String    @db.VarChar(20)
  id_cash        String    @db.VarChar(10)
  id_jenis       Int
  id_detail      Int
  nominal        Decimal   @db.Decimal(10, 2)
  keterangan     String?   @db.VarChar(255)
  created_at     DateTime  @db.Timestamp(6)
  updated_at     DateTime? @db.Timestamp(6)

  reference_cash ReferenceCashInOut       @relation(fields: [id_cash], references: [id_cash])
  jenis_cash     ReferenceJenisCashInOut  @relation(fields: [id_jenis], references: [id_jenis])
  detail_cash    ReferenceDetailCashInOut @relation(fields: [id_detail], references: [id_detail])

  @@map("cash_in_out")
}

model ReferenceCashInOut {
  id_cash    String    @id @db.VarChar(10)
  nm_cash    String    @db.VarChar(100)
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  reference_jenis_cash_in_out  ReferenceJenisCashInOut[]
  reference_detail_cash_in_out ReferenceDetailCashInOut[]

  cash_in_out CashInOut[]

  @@map("reference_cash_in_out")
}

model ReferenceJenisCashInOut {
  id_jenis   Int       @id @default(autoincrement())
  nm_jenis   String    @db.VarChar(100)
  id_cash    String    @db.VarChar(10)
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  reference_cash_in_out        ReferenceCashInOut         @relation(fields: [id_cash], references: [id_cash])
  reference_detail_cash_in_out ReferenceDetailCashInOut[]

  CashInOut CashInOut[]

  @@map("reference_jenis_cash_in_out")
}

model ReferenceDetailCashInOut {
  id_detail  Int       @id @default(autoincrement())
  nm_detail  String    @db.VarChar(100)
  id_cash    String    @db.VarChar(10)
  id_jenis   Int
  created_at DateTime  @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  reference_cash_in_out       ReferenceCashInOut      @relation(fields: [id_cash], references: [id_cash])
  reference_jenis_cash_in_out ReferenceJenisCashInOut @relation(fields: [id_jenis], references: [id_jenis])

  CashInOut CashInOut[]

  @@map("reference_detail_cash_in_out")
}

model Pembelian {
  id_pembelian     String    @id @db.VarChar(20)
  tg_pembelian     String    @db.VarChar(20)
  id_supplier      String    @db.VarChar(10)
  nm_supplier      String    @db.VarChar(100)
  jumlah           Int       @db.Int
  total_harga_beli Decimal   @db.Decimal(10, 2)
  total_harga_jual Decimal   @db.Decimal(10, 2)
  jenis_pembayaran String    @db.VarChar(100)
  keterangan       String?   @db.VarChar(255)
  created_at       DateTime  @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)

  supplier        Supplier          @relation(fields: [id_supplier], references: [id_supplier])
  DetailPembelian DetailPembelian[]
  HutangDagang    HutangDagang[]

  @@map("pembelian")
}

model DetailPembelian {
  id_detail_pembelian Int       @id @default(autoincrement())
  id_pembelian        String    @db.VarChar(20)
  id_product          String    @db.VarChar(100)
  nm_divisi           String    @db.VarChar(100)
  nm_produk           String    @db.VarChar(100)
  harga_beli          Decimal   @db.Decimal(10, 2)
  harga_jual          Decimal   @db.Decimal(10, 2)
  jumlah              Int       @db.Int
  diskon              Decimal   @db.Decimal(10, 2)
  ppn                 Decimal   @db.Decimal(10, 2)
  total_nilai_beli    Decimal   @db.Decimal(10, 2)
  total_nilai_jual    Decimal   @db.Decimal(10, 2)
  created_at          DateTime  @db.Timestamp(6)
  updated_at          DateTime? @db.Timestamp(6)

  pembelian Pembelian @relation(fields: [id_pembelian], references: [id_pembelian])
  product   Product   @relation(fields: [id_product], references: [id_product])

  @@map("detail_pembelian")
}

model Penjualan {
  id_penjualan     String    @id @db.VarChar(20)
  tg_penjualan     String    @db.VarChar(20)
  jumlah           Int       @db.Int
  total_nilai_beli Decimal   @db.Decimal(10, 2)
  total_nilai_jual Decimal   @db.Decimal(10, 2)
  id_anggota       String    @db.VarChar(8)
  nm_anggota       String    @db.VarChar(100)
  jenis_pembayaran String    @db.VarChar(100)
  keterangan       String?   @db.VarChar(255)
  username         String    @db.VarChar(100)
  created_at       DateTime  @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)

  anggota         Anggota           @relation(fields: [id_anggota], references: [id_anggota])
  user            User              @relation(fields: [username], references: [username])
  DetailPenjualan DetailPenjualan[]
  HutangAnggota   HutangAnggota[]

  @@map("penjualan")
}

model DetailPenjualan {
  id_detail_penjualan Int       @id @default(autoincrement())
  id_penjualan        String    @db.VarChar(20)
  id_product          String    @db.VarChar(100)
  nm_divisi           String    @db.VarChar(100)
  nm_produk           String    @db.VarChar(100)
  harga               Decimal   @db.Decimal(10, 2)
  jumlah              Int       @db.Int
  diskon              Decimal   @db.Decimal(10, 2)
  total               Decimal   @db.Decimal(10, 2)
  created_at          DateTime  @db.Timestamp(6)
  updated_at          DateTime? @db.Timestamp(6)

  penjualan Penjualan @relation(fields: [id_penjualan], references: [id_penjualan])
  product   Product   @relation(fields: [id_product], references: [id_product])

  @@map("detail_penjualan")
}

model HutangAnggota {
  id_hutang_anggota String    @id @db.VarChar(20)
  id_anggota        String    @db.VarChar(8)
  nm_anggota        String    @db.VarChar(100)
  tg_hutang         String    @db.VarChar(20)
  nominal           Decimal   @db.Decimal(10, 2)
  id_penjualan      String    @db.VarChar(20)
  created_at        DateTime  @db.Timestamp(6)
  updated_at        DateTime? @db.Timestamp(6)

  anggota   Anggota   @relation(fields: [id_anggota], references: [id_anggota])
  penjualan Penjualan @relation(fields: [id_penjualan], references: [id_penjualan])

  @@map("hutang_anggota")
}

model HutangDagang {
  id_hutang_dagang String    @id @db.VarChar(20)
  id_supplier      String    @db.VarChar(8)
  nm_supplier      String    @db.VarChar(100)
  tg_hutang        String    @db.VarChar(20)
  nominal          Decimal   @db.Decimal(10, 2)
  id_pembelian     String    @db.VarChar(20)
  created_at       DateTime  @db.Timestamp(6)
  updated_at       DateTime? @db.Timestamp(6)

  supplier  Supplier  @relation(fields: [id_supplier], references: [id_supplier])
  pembelian Pembelian @relation(fields: [id_pembelian], references: [id_pembelian])

  @@map("hutang_dagang")
}
